name: 🚀 CI/CD Pipeline

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

permissions:
  contents: read

jobs:
  # 🧪 Quality Assurance Pipeline
  quality-gate:
    name: 🔍 Quality Gate
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node-version: [18.x, 20.x, 21.x]
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 📦 Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          registry-url: "https://registry.npmjs.org"

      - name: 🔧 Install Dependencies
        run: npm ci --ignore-scripts

      - name: 🏗️ Build Project
        run: npm run build

      - name: 🧹 Lint Code
        run: npm run lint

      - name: 🧪 Run Tests
        run: npm test
        env:
          CI: true

      - name: 📊 Upload Coverage
        if: matrix.node-version == '20.x' && matrix.os == 'ubuntu-latest'
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true

  # 🔒 Security Audit
  security-audit:
    name: 🔒 Security Audit
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "npm"

      - name: 🔍 NPM Audit
        run: npm audit --audit-level=moderate

      - name: 🛡️ Security Scan
        uses: securecodewarrior/github-action-add-sarif@v1
        if: always()
        with:
          sarif-file: "security-audit.sarif"

  # 📝 Semantic Release Preparation
  release-check:
    name: 📝 Release Check
    runs-on: ubuntu-latest
    needs: [quality-gate, security-audit]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    outputs:
      new-release-published: ${{ steps.semantic-release.outputs.new-release-published }}
      new-release-version: ${{ steps.semantic-release.outputs.new-release-version }}

    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "npm"
          registry-url: "https://registry.npmjs.org"

      - name: 🔧 Install Dependencies
        run: npm ci --ignore-scripts

      - name: 📝 Semantic Release (Dry Run)
        id: semantic-release
        uses: cycjimmy/semantic-release-action@v4
        with:
          dry_run: true
          semantic_version: 21.0.7
          extra_plugins: |
            @semantic-release/changelog
            @semantic-release/git
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
